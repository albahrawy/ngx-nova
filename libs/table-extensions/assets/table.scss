.cdk-table .mat-table,
cdk-table,
mat-table {
    &.nova-virtual-scroll {
        overflow: auto;

        .cdk-row,
        .mat-row,
        cdk-row,
        mat-row {
            min-height: unset;
            box-sizing: border-box;
            height: var(--nova-table-row-height, unset) !important;
        }

        .table-virtual-scroll-viewport {
            display: block;
            position: relative;
            transform: translateZ(0);
        }

        // Scrolling container.
        .cdk-virtual-scrollable {
            overflow: auto;
            will-change: scroll-position;
            contain: strict;
            -webkit-overflow-scrolling: touch;
        }

        // Wrapper element for the rendered content. This element will be transformed to push the rendered
        // content to its correct offset in the data set as a whole.
        .cdk-virtual-scroll-content-wrapper {
            position: absolute;
            top: 0;
            left: 0;
            contain: content;

            // Note: We can't put `will-change: transform;` here because it causes Safari to not update the
            // viewport's `scrollHeight` when the spacer's transform changes.

            [dir='rtl'] & {
                right: 0;
                left: auto;
            }
        }

        .cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper {
            min-width: 100%;
        }

        // Spacer element that whose width or height will be adjusted to match the size of the entire data
        // set if it were rendered all at once. This ensures that the scrollable content region is the
        // correct size.
        .cdk-virtual-scroll-spacer {
            height: 1px;
            transform-origin: 0 0;
            flex: 0 0 auto; // prevents spacer from collapsing if display: flex is applied

            // Note: We can't put `will-change: transform;` here because it causes Safari to not update the
            // viewport's `scrollHeight` when the spacer's transform changes.

            [dir='rtl'] & {
                transform-origin: 100% 0;
            }
        }
    }
}